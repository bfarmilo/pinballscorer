"use strict";var precacheConfig=[["/pinballscorer/assets/OFL.txt","5096248a0ad125929b038a264f57b570"],["/pinballscorer/assets/PressStart2P-Regular.ttf","ccb1dfce06ad3883f8e3b5ae011aa795"],["/pinballscorer/assets/bell.ogg","7b87f7facc356fac2e149c55475faecd"],["/pinballscorer/assets/buzz.ogg","23f21e3c6909d2e3799caa9fc9a3f7fb"],["/pinballscorer/assets/favicon.ico","53ac170e970ad034a55ee15ce198708c"],["/pinballscorer/assets/icons/android-chrome-192x192.png","59e221032ab061cad83b6ce2bcddbde8"],["/pinballscorer/assets/icons/android-chrome-512x512.png","cf3fdf7af60a294d6d3f48cb7ad82488"],["/pinballscorer/assets/icons/apple-touch-icon.png","a0e46feb3cc577478b127936e739dd08"],["/pinballscorer/assets/icons/favicon-16x16.png","d712b605ed58419c7e6d4ab885d147b7"],["/pinballscorer/assets/icons/favicon-32x32.png","2f7ce797cf8f198dedb9a9f38b7ef13b"],["/pinballscorer/assets/icons/mstile-150x150.png","ba817517b2c4e1ba1ce802c4d4fafdb4"],["/pinballscorer/assets/reset.ogg","8281309efaa5353aee5fe62a3eb711e8"],["/pinballscorer/assets/up.ogg","adb6e23ba56bf13d4398420a3e849164"],["/pinballscorer/bundle.2ec7e.js","636d3992723d009e520afd6a22369fc9"],["/pinballscorer/favicon.ico","53ac170e970ad034a55ee15ce198708c"],["/pinballscorer/index.html","e7fac1c7403b22557482f903b6c95ead"],["/pinballscorer/manifest.json","181aa98510ddd72614f0d84a6b41d94f"],["/pinballscorer/route-home.chunk.2750b.js","5412ded0c0e5d8840bd92d002a2e2098"],["/pinballscorer/route-profile.chunk.4be01.js","1041c075de150e3e38f1ad1fef81a5e6"],["/pinballscorer/style.8efc1.css","62742c966166a023c49c6fa2cae04039"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var r=new URL(e);return"/"===r.pathname.slice(-1)&&(r.pathname+=n),r.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,n,r,a){var t=new URL(e);return a&&t.pathname.match(a)||(t.search+=(t.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(r)),t.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var r=new URL(n).pathname;return e.some(function(e){return r.match(e)})},stripIgnoredUrlParameters=function(e,n){var r=new URL(e);return r.hash="",r.search=r.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),r.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],r=e[1],a=new URL(n,self.location),t=createCacheKey(a,hashParamName,r,!1);return[a.toString(),t]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(r){if(!n.has(r)){var a=new Request(r,{credentials:"same-origin"});return fetch(a).then(function(n){if(!n.ok)throw new Error("Request for "+r+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(r,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(r){return Promise.all(r.map(function(r){if(!n.has(r.url))return e.delete(r)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,r=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(n=urlsToCacheKeys.has(r))||(r=addDirectoryIndex(r,"index.html"),n=urlsToCacheKeys.has(r));!n&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(r=new URL("index.html",self.location).toString(),n=urlsToCacheKeys.has(r)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(r)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});